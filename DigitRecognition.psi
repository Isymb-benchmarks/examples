// skipped
// data too large

def main(){
    dataPrior := readCSV("./data/DigitRecognition/nbPrior.csv");

    dataParams1 := readCSV("./data/DigitRecognition/nbParams1.csv");
    dataParams2 := readCSV("./data/DigitRecognition/nbParams2.csv");
    dataParams3 := readCSV("./data/DigitRecognition/nbParams3.csv");
    dataParams4 := readCSV("./data/DigitRecognition/nbParams4.csv");
    dataParams5 := readCSV("./data/DigitRecognition/nbParams5.csv");
    dataParams6 := readCSV("./data/DigitRecognition/nbParams6.csv");
    dataParams7 := readCSV("./data/DigitRecognition/nbParams7.csv");
    dataParams8 := readCSV("./data/DigitRecognition/nbParams8.csv");
    dataParams9 := readCSV("./data/DigitRecognition/nbParams9.csv");
    dataParams10 := readCSV("./data/DigitRecognition/nbParams10.csv");

    dataX := readCSV("./input.csv");

    probs := array(10);
    for i in [0..10){ probs[i] = dataPrior[i]; }
    // probs[9]=1;
    // for i in [0..9){ probs[9]-=probs[i]; } // fix rounding errors: TODO: make tolerance configurable
    y := categorical(probs);
 //   n := dataX.length;
 //   assert(n==784);
    //n=100;

    if y==0{
        for i in [0..dataX.length){
            x := flip(dataParams1[i]);
            observe(x == dataX[i]);
        }
    }else if y==1{
        for i in [0..dataX.length){
            x := flip(dataParams2[i]);
            observe(x == dataX[i]);
        }
    }else if y==2{
        for i in [0..dataX.length){
            x := flip(dataParams3[i]);
            observe(x == dataX[i]);
        }        
    }else if y==3{
        for i in [0..dataX.length){
            x := flip(dataParams4[i]);
            observe(x == dataX[i]);
        }                
    }else if y==4{
        for i in [0..dataX.length){
            x := flip(dataParams5[i]);
            observe(x == dataX[i]);
        }                
    }else if y==5{
        for i in [0..dataX.length){
            x := flip(dataParams6[i]);
            observe(x == dataX[i]);
        }                
    }else if y==6{
        for i in [0..dataX.length){
            x := flip(dataParams7[i]);
            observe(x == dataX[i]);
        }                
    }else if y==7{
        for i in [0..dataX.length){
            x := flip(dataParams8[i]);
            observe(x == dataX[i]);
        }                
    }else if y==8{
        for i in [0..dataX.length){
            x := flip(dataParams9[i]);
            observe(x == dataX[i]);
        }                
    }else if y==9{
        for i in [0..dataX.length){
            x := flip(dataParams10[i]);
            observe(x == dataX[i]);
        }
    }
    return y; // expected: 1.2845654376053378e-151·δ(0)[-9+y]+1.5753310375910065e-66·δ(0)[-6+y]+3.2488621047989999e-78·δ(0)[y]+3.6292341137355297e-125·δ(0)[-1+y]+3.9859766543648140e-119·δ(0)[-4+y]+3.9869724121886395e-57·δ(0)[-5+y]+6.4480104927268174e-82·δ(0)[-8+y]+6.9171797278671309e-18·δ(0)[-2+y]+9.4515477402753591e-157·δ(0)[-7+y]+9.9999999999999999e-01·δ(0)[-3+y]
}
